[{"content":"Welcome to my website! I\u0026rsquo;m really happy you stopped by.\n","date":null,"permalink":"/","section":"","summary":"","title":""},{"content":"","date":null,"permalink":"/categories/","section":"","summary":"","title":""},{"content":"","date":null,"permalink":"/tags/","section":"","summary":"","title":""},{"content":"All the latest posts are here !!\n","date":null,"permalink":"/posts/","section":"Blog","summary":"","title":"Blog"},{"content":"","date":null,"permalink":"/categories/category1/","section":"","summary":"","title":"Category1"},{"content":"","date":null,"permalink":"/categories/category2/","section":"","summary":"","title":"Category2"},{"content":"","date":null,"permalink":"/tags/checking/","section":"","summary":"","title":"Checking"},{"content":"","date":null,"permalink":"/tags/first/","section":"","summary":"","title":"First"},{"content":"","date":null,"permalink":"/categories/latin/","section":"","summary":"","title":"Latin"},{"content":"Dillinger #The Last Markdown Editor, Ever #\rDillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features # Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and One Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech #Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation #Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins #Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development #Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source #For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker #Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License #MIT\nFree Software, Hell Yeah!\n","date":"25 January 2022","permalink":"/posts/2025/post-first-my/","section":"Blog","summary":"Checking if all the rendering is ok.","title":"My First Post"},{"content":"","date":null,"permalink":"/categories/nepal/","section":"","summary":"","title":"Nepal"},{"content":"","date":null,"permalink":"/tags/substack/","section":"","summary":"","title":"Substack"},{"content":"","date":null,"permalink":"/tags/sugam/","section":"","summary":"","title":"Sugam"},{"content":"============\nParagraphs are separated by a blank line.\n2nd paragraph. Italic, bold, and monospace. Itemized lists look like:\nthis one that one the other one Note that \u0026mdash; not considering the asterisk \u0026mdash; the actual text content starts at 4-columns in.\nBlock quotes are written like so.\nThey can span multiple paragraphs, if you like.\nUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \u0026ldquo;it\u0026rsquo;s all in chapters 12\u0026ndash;14\u0026rdquo;). Three dots \u0026hellip; will be converted to an ellipsis. Unicode is supported. ☺\nAn h2 header #Here\u0026rsquo;s a numbered list:\nfirst item second item third item Note again how the actual text starts at 4 columns in (4 characters from the left side). Here\u0026rsquo;s a code sample:\n# Let me re-iterate ...\rfor i in 1 .. 10 { do-something(i) }\rAs you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:\ndefine foobar() {\rprint \u0026#34;Welcome to flavor country!\u0026#34;;\r} (which makes copying \u0026amp; pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:\nimport time # Quick, count to ten! for i in range(10): # (but not *too* quick) time.sleep(0.5) print(i) An h3 header #Now a nested list:\nFirst, get these ingredients:\ncarrots celery lentils Boil some water.\nDump everything in the pot and follow this algorithm:\nfind wooden spoon\runcover pot\rstir\rcover pot\rbalance wooden spoon precariously on pot handle\rwait 10 minutes\rgoto first step (or shut off burner when done)\rDo not bump wooden spoon or it will fall.\nNotice again how text always lines up on 4-space indents (including that last line which continues item 3 above).\nHere\u0026rsquo;s a link to a website, to a local doc, and to a section heading in the current doc. Here\u0026rsquo;s a footnote 1.\nTables can look like this:\nName Size Material Color\nAll Business 9 leather brown Roundabout 10 hemp canvas natural Cinderella 11 glass transparent\nTable: Shoes sizes, materials, and colors.\n(The above is the caption for the table.) Pandoc also supports multi-line tables:\nKeyword Text\nred Sunsets, apples, and other red or reddish things.\ngreen Leaves, grass, frogs and other things it\u0026rsquo;s not easy being.\nA horizontal rule follows.\nHere\u0026rsquo;s a definition list:\napples : Good for making applesauce.\noranges : Citrus!\ntomatoes : There\u0026rsquo;s no \u0026ldquo;e\u0026rdquo; in tomatoe.\nAgain, text is indented 4 spaces. (Put a blank line between each term and its definition to spread things out more.)\nHere\u0026rsquo;s a \u0026ldquo;line block\u0026rdquo; (note how whitespace is honored):\n| Line one | Line too | Line tree\nand images can be specified like so:\nAn exemplary image\rInline math equation: $\\omega = d\\phi / dt$. Display math should get its own line like so:\n$$I = \\int \\rho R^{2} dV$$\nAnd note that you can backslash-escape any punctuation characters which you wish to be displayed literally, ex.: `foo`, *bar*, etc.\nSome footnote text.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":null,"permalink":"/about/","section":"About","summary":"","title":"About"},{"content":"This section contains all my current projects.\n","date":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects"}]